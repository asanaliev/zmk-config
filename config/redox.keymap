/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings =
                <&none>,
                <&none>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            // --------------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |  4  |  5  |                   ---                |  6    |  7    |  8    |  9   | 0  |    BKSP   |
            // | TAB   |  Q  |  W  |   E   |  R  |  T  |   (   |           ---        |  )    |  Y    |  U    |  I    |  O   | P  |     -     |
            // | CTRL  |  A  |  S  |   D   |  F  |  G  |   [   |           ---        |  ]    |  H    |  J    |  K    |  L   | ;  |     '     |
            // | SHIFT |  Z  |  X  |   C   |  V  |  B  | PG_UP | PG_DOWN | --- | HOME | END   |  N    |  M    |  ,    |  .   | /  | SHFT |
            // | CRTL  | ALT | GUI | LOWER |    BKSP    | ESC | SPACE   | --- | DEL  | SPACE |     RET     | LEFT  | DOWN | UP |   RIGHT   |

            bindings = <
&none        &kp N1    &kp N2        &kp N3   &kp N4         &kp N5                                                  &kp N6  &kp N7      &kp N8     &kp N9        &kp N0    &kp RC(RG(Q))
&none        &kp Q     &kp W         &kp E    &kp R          &kp T   &none                               &none       &kp Y   &kp U       &kp I      &kp O         &kp P     &none
&bootloader  &kp A     &mt LSHIFT S  &lt 1 D  &mt LGUI F     &kp G   &none                               &caps_word  &kp H   &mt RGUI J  &kp K      &mt RSHIFT L  &kp SEMI  &bootloader
&none        &kp Z     &kp X         &kp C    &kp V          &kp B   &kp LSHIFT    &kp LGUI    &kp RGUI  &sk RSHIFT  &kp N   &kp M       &kp COMMA  &kp PERIOD    &kp FSLH  &none
&kp LCTRL    &kp LALT  &none         &none    &kp BACKSPACE          &lt 4 ESCAPE  &kp TAB     &none     &kp SPACE           &kp RET     &kp LEFT   &kp DOWN      &kp UP    &kp RIGHT
            >;
        };

        SYMBOLS {
            // --------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |   4   |  5  |                   ---              |  6  |  7  |   8  |  9   |  0  |  DEL  |
            // | ESC   |  1  |  2  |   3   |   4   |  5  |   (   |           ---        |  )  |  6  |  7  |   8  |  9   |  0  |  DEL  |
            // | CTRL  |  -  |  =  |   [   |   ]   |  \  |   [   |           ---        |  ]  |  *  |  4  |   5  |  6   |  +  |   -   |
            // | SHIFT | ESC | GUI | COPY  | PASTE |     | PG_UP | PG_DOWN | --- | HOME | END |  \  |  1  |   2  |  3   | RET |  RET  |
            // | CRTL  | ALT | GUI | LOWER |     GUI     | LOWER | SPACE   | --- | DEL  |  0  |    RAISE  | LEFT | DOWN | UP  | RIGHT |

            bindings = <
&trans   &trans     &trans     &trans     &trans     &trans                                       &trans           &trans            &trans            &trans             &trans       &trans
&kp ESC  &kp N1     &kp N2     &kp N3     &kp N4     &kp N5     &trans                    &trans  &kp N6           &kp BACKSLASH     &kp SINGLE_QUOTE  &kp GRAVE          &kp N0       &kp DEL
&trans   &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT   &kp BSLH   &trans                    &trans  &kp KP_MULTIPLY  &kp LEFT_BRACKET  &kp MINUS         &kp RIGHT_BRACKET  &kp KP_PLUS  &kp KP_MINUS
&trans   &kp ESC    &kp LGUI   &kp LG(C)  &kp LG(V)  &kp GRAVE  &trans  &trans    &trans  &trans  &kp KP_DIVIDE    &kp N1            &kp EQUAL         &kp N3             &kp RET      &kp RET
&trans   &trans     &trans     &trans     &trans                &trans  &trans    &trans  &kp N0                   &mo 3             &trans            &trans             &trans       &trans
            >;
        };

        raise_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |  4  |  5  |                   ---                |  6   |  7   |  8   |  9   |  0    |  DEL  |
            // | ESC   |  !  |  @  |   #   |  $  |  %  |   (   |           ---        |  )    |  ^   |  &   |  *   |  (   |  )    |  DEL  |
            // | CTRL  |  _  |  +  |   {   |  }  | "|" |   [   |           ---        |  ]    | HOME | PGUP | PRSC | UP   |  `    |   ~   |
            // | SHIFT | ESC | GUI |   (   |  )  |     | PG_UP | PG_DOWN | --- | HOME | END   | END  | PGDN | LEFT | DOWN | RIGHT |  RET  |
            // | CRTL  | ALT | GUI | LOWER |    GUI    | LOWER | SPACE   | --- | DEL  | SPACE |    RAISE    | LEFT | DOWN | UP    | RIGHT |

            bindings = <
&trans   &trans     &trans    &trans    &trans    &trans                                       &trans     &trans     &trans     &trans    &trans     &trans
&kp ESC  &kp EXCL   &kp AT    &kp HASH  &kp DLLR  &kp PRCNT  &trans                    &trans  &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR   &kp DEL
&trans   &kp UNDER  &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE   &trans                    &trans  &kp HOME   &kp PG_UP  &kp PSCRN  &kp UP    &kp GRAVE  &kp TILDE
&trans   &kp ESC    &kp LGUI  &kp LPAR  &kp RPAR  &kp TILDE  &trans  &trans    &trans  &trans  &kp END    &kp PG_DN  &kp LEFT   &kp DOWN  &kp RIGHT  &kp RET
&trans   &trans     &trans    &mo 3     &trans               &mo 3   &trans    &trans  &trans             &trans     &trans     &trans    &trans     &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // |  F1   |  F2   |    F3    |    F4     |     F5     | F6 |                   ---                | F7  | F8  |  F9  |  F10 | F11 | F12        |
            // | TAB   |       |          |           |            |    | BOOTL |           ---        |  )    | BT1 | BT2 |  BT3 |  BT4 | BT5 | OUTPUT TGL |
            // | CTRL  | MUTE  |  Vol Dn  |  Vol Up   | Play/Pause |    | RESET |           ---        |  ]    | F1  | F2  |  F3  |  F4  | F5  | F6         |
            // | SHIFT | PSCRN |  PSCRN   |   CAPS    |            |    | PG_UP | PG_DOWN | --- | HOME | END   | F7  | F8  |  F9  |  F10 | F11 | F12        |
            // | CRTL  | ALT   |  GUI     |   LOWER   |      GUI        | LOWER | SPACE   | --- | DEL  | SPACE |   RAISE   | LEFT | DOWN | UP  |   RIGHT    |

            bindings = <
&kp F1  &kp F2      &kp F3        &kp F4        &kp F5            &kp F6                                             &kp F7        &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
&trans  &none       &none         &none         &none             &none   &bootloader                    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &out OUT_TOG
&trans  &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PLAY_PAUSE  &none   &sys_reset                     &trans      &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6
&trans  &kp PSCRN   &kp PSCRN     &kp CLCK      &none             &none   &trans       &trans    &trans  &trans      &kp F7        &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
&trans  &trans      &trans        &trans        &trans                    &trans       &trans    &trans  &trans                    &trans        &trans        &trans        &trans        &trans
            >;
        };

        NAV {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                    &trans  &trans        &trans    &trans         &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &kp RG(LEFT)  &kp UP    &kp RG(RIGHT)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &kp LEFT      &kp DOWN  &kp RIGHT      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &kp RA(LEFT)  &trans    &kp RA(RIGHT)  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans    &trans  &trans          &trans        &trans    &trans         &trans  &trans
            >;
        };
    };
};
